{"version":3,"sources":["form.module.css","Components/Form.jsx","Components/Contact.jsx","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","Components/Filter.jsx","Components/Container.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","Form","state","name","number","phonenumber","input","match","nameInputId","randomID","numberInputId","reset","setState","handleChange","e","currentTarget","value","isNaN","length","handleSubmit","preventDefault","alert","props","onSubmit","className","s","form","this","htmlFor","label","type","id","onChange","placeholder","button","Component","Contact","onDeleteContact","onClick","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","getFilter","getLoading","contactsApp","loading","getFilteredContacts","createSelector","filter","contacts","normalizeFilter","toLowerCase","contact","includes","axios","defaults","baseURL","dispatch","a","post","then","data","catch","error","delete","get","connect","filteredContacts","selectors","isLoading","operations","actions","map","Container","title","children","App","fetchContacts","form__container","list__container","filterReducer","createReducer","_","payload","contactsReducer","loadingReducer","contactsAppReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.885db7b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__container\":\"form_form__container__28D0o\",\"list__container\":\"form_list__container__3Loy4\",\"form\":\"form_form__3b8Rr\",\"input\":\"form_input__2Ib-c\",\"label\":\"form_label__3pf4G\",\"button\":\"form_button__2gFMT\"};","import { Component } from 'react'\r\nimport { v4 as randomID } from 'uuid';\r\nimport s from '../form.module.css'\r\n\r\nexport default class Form extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    phonenumber = (input) => {\r\n        const phoneRegex = /^\\d{10}$/;\r\n        return input.match(phoneRegex) ? true : false\r\n    }\r\n    nameInputId = randomID();\r\n    numberInputId = randomID();\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: '',\r\n        });\r\n    };\r\n\r\n    handleChange = e => {\r\n        const { value, name } = e.currentTarget;\r\n        if (name === 'number') {\r\n            if (isNaN(value)) {\r\n                return\r\n            }\r\n        }\r\n        if (name === 'name') {\r\n            const letters = /^[a-zA-Z ]+(?:\\s[a-zA-Z]+)?$/\r\n            if (!value.match(letters) && value.length > 0) {\r\n                return\r\n            }\r\n        }\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.name.length === 0) {\r\n            return alert('Write your name')\r\n\r\n        }\r\n        if (!this.phonenumber(this.state.number)) {\r\n            return alert('An invalid number')\r\n        }\r\n        this.props.onSubmit(this.state)\r\n        this.reset();\r\n    }\r\n\r\n\r\n    render() {\r\n        return <form className={s.form} onSubmit={this.handleSubmit}>\r\n            <label htmlFor={this.nameInputId} className={s.label}>Name</label>\r\n            <input\r\n                type=\"text\"\r\n                id={this.nameInputId}\r\n                className={s.input}\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n                placeholder='your name'\r\n            />\r\n            <br />\r\n            <label htmlFor={this.numberInputId} className={s.label}>Number</label>\r\n            <input\r\n                type=\"text\"\r\n                id={this.numberInputId}\r\n                className={s.input}\r\n                name=\"number\"\r\n                value={this.state.number}\r\n                onChange={this.handleChange}\r\n                placeholder=\"1234567890\"\r\n            />\r\n            <br />\r\n            <button type=\"submit\" className={s.button}>Add contact</button>\r\n        </form>\r\n    }\r\n}","export default function Contact({ id, name, number, onDeleteContact, s }) {\r\n    return (<li className=\"contact\" key={id}>\r\n        {name} {number}\r\n        <button\r\n            type=\"button\"\r\n            onClick={onDeleteContact}\r\n            className={s.button}>\r\n            delete\r\n                </button>\r\n    </li>)\r\n}","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addTodoRequest');\r\nexport const addContactSuccess = createAction('contacts/addTodoSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteTodoRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteTodoSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const getFilter = createAction('app/getFilter');\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contactsApp.contacts;\r\n\r\nexport const getFilter = state => state.contactsApp.filter;\r\n\r\nexport const getLoading = state => state.contactsApp.loading;\r\n\r\nexport const getFilteredContacts = createSelector([getFilter, getContacts], (filter, contacts) => {\r\n  const normalizeFilter = filter.toLowerCase();\r\n  const filteredContacts = contacts.filter(\r\n    contact =>\r\n      contact.name.toLowerCase().includes(normalizeFilter) || contact.number.includes(filter),\r\n  );\r\n  return filteredContacts;\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    fetchContactError(error);\r\n  }\r\n};\r\n\r\nconst addContact = ({ name, number }) => async dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default { addContact, deleteContact, fetchContacts };\r\n","import s from '../form.module.css'\r\nimport Contact from './Contact'\r\nimport { v4 as randomID } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/contacts/contacts-actions'\r\nimport * as selectors from '../redux/contacts/contacts-selectors'\r\nimport operations from '../redux/contacts/contacts-operations'\r\n\r\nconst Filter = ({ getFilter, onDeleteContact, filteredContacts, isLoading }) =>\r\n(<>\r\n    <label htmlFor=\"filter\">Search contact by number or name</label>\r\n    {isLoading && <h2>LOADING...</h2>}\r\n    <br />\r\n    <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        id=\"filter\"\r\n        onChange={(e) => getFilter(e.currentTarget.value)} />\r\n    <ul className={s.form}>\r\n        {filteredContacts.map(({ id, name, number }) => {\r\n            return <Contact key={randomID()} id={id} name={name} number={number} onDeleteContact={() => {\r\n                onDeleteContact(id)\r\n            }} s={s} />\r\n        })}\r\n    </ul>\r\n</>\r\n)\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        filteredContacts: selectors.getFilteredContacts(state),\r\n        isLoading: selectors.getLoading(state)\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onDeleteContact: id => dispatch(operations.deleteContact(id)),\r\n        getFilter: value => dispatch(actions.getFilter(value)),\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","export default function Container({ className, title, children }) {\r\n    return <div className={className}><h2>{title}</h2>{children}</div>\r\n}","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Form from './Components/Form';\r\nimport Filter from './Components/Filter';\r\nimport operations from './redux/contacts/contacts-operations';\r\nimport Container from './Components/Container';\r\nimport s from './form.module.css';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className={s.form__container} title=\"Phonebook\">\r\n        <Form onSubmit={this.props.onSubmit} />\r\n        <Container className={s.list__container} title=\"Contacts\">\r\n          <Filter />\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmit: data => dispatch(operations.addContact(data)),\r\n    fetchContacts: () => dispatch(operations.fetchContacts()),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  deleteContactRequest,\r\n  fetchContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  getFilter,\r\n} from './contacts-actions';\r\n\r\nconst filterReducer = createReducer('', {\r\n  [getFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    const existedContact = state.filter(\r\n      contact => contact.name === payload.name || contact.number === payload.number,\r\n    );\r\n    if (existedContact.length === 0) {\r\n      return [...state, { ...payload }];\r\n    } else {\r\n      alert('this contact or number already exist');\r\n      return state;\r\n    }\r\n  },\r\n\r\n  [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => payload !== id),\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nconst contactsAppReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  loading: loadingReducer,\r\n});\r\n\r\nexport default contactsAppReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\nimport contactsAppReducer from './contacts/contacts-reducer';\r\n\r\n// const persistConfig = {\r\n//   key: 'contacts',\r\n//   storage,\r\n//   blacklist: ['filter'],\r\n// };\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contactsApp: contactsAppReducer,\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\n// import { PersistGate } from 'redux-persist/es/integration/react';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    {/* </PersistGate> */}\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}